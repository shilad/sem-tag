// An default configuration file in HOCON format, almost JSON format
// The file format is described at https://github.com/typesafehub/config.

// Configure the app itself

languages : ["simple"] // ["en","de","fr","nl","it","pl","es","ru","ja","pt","zh","sv","uk","ca","no","fi","cs","hu","ko","id","tr","ro","sk","da","he"]

baseDir : ../../sem-tag

tmpDir : ${baseDir}"/.tmp"

download : {
    matcher : ["articles"]
    listFile : "downloadList.tsv"
    path : ${baseDir}"/download"
}

lucene : {
    version : "4.3"
    directory : ${baseDir}"/db/lucene"
    options : {
        default : plaintext
        plaintext : {
            type : plaintext

            version : ${lucene.version}
            directory : ${lucene.directory}
            namespaces : ["article"]

            // TokenizerOptions
            caseInsensitive : true
            useStopWords : true
            useStem : true

            // TextFieldElements
            title : 0
            redirects : false
            plaintext : true
        }
        esa : {
            type : esa

            version : ${lucene.version}
            directory : ${lucene.directory}
            namespaces : ["article"]

            // TokenizerOptions
            caseInsensitive : true
            useStopWords : true
            useStem : true

            // TextFieldElements
            title : 1
            redirects : true
            plaintext : true
        }
    }
    searcher : {
        searcher : {
            langs : ${languages}
            options : esa
        }
    }
}

phrases {
    // whether or not the phrase analyzers are being loaded.
    // will be overridden while saving corpora to the daos
    loading : false

    // Analyzers
    analyzer : {
        default : luceneAnalyzer
        stanford : {
            phraseDao : stanford
            localPageDao : default
            path : ./dictionary.bz2
            type : stanford
            phrasePruner : {
                type : string
                minCount : 3,
                maxRank : 10,
                minFraction : 0.001
            }
            pagePruner : {
                type : simple
                minCount : 3,
                maxRank : 15,
                minFraction : 0.001
            }
        }
        anchortext : {
            phraseDao : anchortext
            localPageDao : default
            localLinkDao : default
            type : anchortext
            phrasePruner : {
                type : string
                minCount : 1,
                maxRank : 10,
                minFraction : 0.001
            }
            pagePruner : {
                type : simple
                minCount : 1,
                maxRank : 15,
                minFraction : 0.001
            }
        }
        luceneAnalyzer : {
            type : luceneAnalyzer
            localPageDao : default
        }
    }

    // Daos store data associated with an algorithm and analyzer
    dao {

        stanford : {
            isNew : ${phrases.loading}
            path : ${baseDir}"/db/phrases/stanford"
            type : objectdb
        }
        anchortext : {
            isNew : ${phrases.loading}
            path : ${baseDir}"/db/phrases/anchortext"
            type : objectdb
        }
    }
}

dao : {
    dataSource : {
        h2db : {
           driver : org.h2.Driver
           url: "jdbc:h2:"${baseDir}"/db/h2"
           username : sa
           password : ""
        }
        semtag-db {
           driver : org.h2.Driver
           url: "jdbc:h2:"${baseDir}"/semtag-db/h2"
           username : sa
           password : ""
        }
    }
    localPage : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
        }
        live : {}
    }
    localLink : {
        default : matrix
        sql : {
            type : sql
            dataSource : h2db
        }
        matrix : {
            type : matrix
            delegate : sql
            maxOpenPages : 3
            maxPageSize : 100M
            path : ${baseDir}"/db/matrix/local-link"
        }
        live : {}
    }
    rawPage : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
            localPageDao : sql
        }
        live : {}
    }
    universalPage : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
        }
        live : {}
    }

    localCategoryMember : {
        default : sql
        sql : {
            type : sql
            dataSource: h2db
        }
        live : {}
    }
    universalLink : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
            localLinkDao : sql
        }
        skeletal-sql : {
            type : skeletal-sql
            dataSource : h2db
        }
        live : {}
    }
    redirect : {
        default : sql
        sql : {
            type : sql
            dataSource : h2db
        }
        live : {}
    }
}

mapper : {
    default : monolingual
    monolingual : {
        type : monolingual
        algorithmId : 0     // each algorithm must have a unique ID
        localPageDao : default
    }
    purewikidata : {
        type : purewikidata
        algorithmId : 1
        localPageDao : default
    }
}

sr : {
    disambig : {
        default : topResult
        topResult : {
            type : topResult
            phraseAnalyzer : luceneAnalyzer
        }
    }

    metric {
        path : ${baseDir}"/dat/sr/"
        local : {
            default : ESA
            LocalMilneWitten : {
                type : LocalMilneWitten
                disambiguator : default
                linkDao : default
                pageDao : default
                outLinks : false
                similaritynormalizer  : percentile
                mostsimilarnormalizer : percentile
            }
            ESA : {
                type : ESA
                pageDao : default
                disambiguator : default
                similaritynormalizer  : percentile
                mostsimilarnormalizer : percentile
                resolvephrases : true
            }
        }
        universal : {
            default : UniversalMilneWitten
            UniversalMilneWitten : {
                type: UniversalMilneWitten
                disambiguator : default
                linkDao : default
                pageDao : default
                outLinks : false
                similaritynormalizer  : percentile
                mostsimilarnormalizer : rank
            }
        }
    }

    normalizer {
        defaultmaxresults : 100
        identity : {
            type : identity
        }
        loess : {
            type : loess
        }
        log : {
            type : log
        }
        percentile : {
            type : percentile
        }
        range : {
            type : range
        }
        rank : {
            type : rank
        }
    }

    explanation {
        localpagedao = sql
    }

    dataset : {
        names : ["simple", "atlasify240.txt","simple","MC.txt","simple","radinsky.txt","simple","RG.txt","simple","wikisim353.txt","simple","WikiSimi3000.txt","simple","wordsim353.txt"]
        path : ../dat/gold/cleaned/
        gold : ../dat/gold/gold.titles.similarity.txt
    }
}

sem-tag : {
    lang : simple // temporary fix until we properly implement languages
    dao : {
        user : {
            default : sql
            sql : {
                type : sql
                datasource : semtag-db
            }
        }
        tagApp : {
            default : sql
            sql : {
                type : sql
                datasource : semtag-db
            }
        }
        item : {
            default : sql
            sql : {
                type : sql
                datasource : semtag-db
            }
        }
        concept : {
            default : sql
            sql : {
                type : sql
                datasource : semtag-db
                mapper : default
            }
        }
    }
    saveHandler : {
        default : sql
        sql : {
            type : sql
            datasource : semtag-db
        }
    }
    concept : {
        default : wikapidia
        wikapidia : {
            type : wikapidia
            lang : ${sem-tag.lang}
            disambiguator : default
            tagAppDao : default
        }
    }
    similar : {
        concept : {
            default : wikapidia
            wikapidia : {
                type : wikapidia
                conceptDao : default
                lang : ${sem-tag.lang}
                srMetric : default
            }
        }
        tagApp : {
            tagApp : {
                type : tagApp
                tagAppDao : default
                conceptSim : default
            }
        }
        item : {
            item : {
                type : item
                tagAppDao : default
                conceptSim : default
            }
        }
    }
}